version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: monitoreo-postgres
    environment:
      POSTGRES_DB: monitoreo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - monitoreo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Microservicio de Monitoreo
  monitoreo:
    build:
      context: ./monitoreo
      dockerfile: Dockerfile
    container_name: monitoreo-app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATASOURCE_URL: jdbc:postgresql://postgres:5432/monitoreo_db
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - monitoreo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus para métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoreo-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoreo-network
    depends_on:
      - monitoreo

  # Loki para logs
  loki:
    image: grafana/loki:latest
    container_name: monitoreo-loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoreo-network

  # Promtail para recolectar logs
  promtail:
    image: grafana/promtail:latest
    container_name: monitoreo-promtail
    volumes:
      - ./config/promtail-config.yaml:/etc/promtail/config.yml
      - ./monitoreo/logs:/var/log/monitoreo
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoreo-network
    depends_on:
      - loki

  # Grafana para visualización
  grafana:
    image: grafana/grafana:latest
    container_name: monitoreo-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoreo-network
    depends_on:
      - prometheus
      - loki

  # Alertmanager para notificaciones por correo
  alertmanager:
    image: prom/alertmanager
    container_name: monitoreo-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - monitoreo-network

volumes:
  postgres_data:
  prometheus_data:
  loki_data:
  grafana_data:

networks:
  monitoreo-network:
    driver: bridge 